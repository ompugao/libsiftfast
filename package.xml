<?xml version="1.0"?>
<package>
  <name>libsiftfast</name>
  <version>1.3.0</version>
  <description>
    
Various utilities to compute the SIFT features of a greyscale image. Packages offered are:

*libsiftfast.so - main library that contains the sift code

*siftfast - really fast SIFT implementation using SSE and OpenMP (also fixes some bugs from lowe's code, so outputs are similar, but not exact). The usage is very similar to David Lowe's sift program. To input a greyscale image test.pgm and get the SIFT keys test.key use

*siftfast.m - matlab/octave mex file that uses sift_fast, just do [frames,descr]=sift_mex(grayscale_image);
           frames is a 4xN matrix of [X,Y,scale,orientation],
           descr is a 128xN matrix of normalized descriptors
           To use the mex files, libsift_fast.so, Octave/Matlab need to be able to load it. A way to do it is to add its path to your LD_LIBRARY_PATH in your ~/.bashrc file, or in matlab with:
           setenv('LD_LIBRARY_PATH',[getenv('LD_LIBRARY_PATH') ':' libsift_directory]);

SIFT is based on
David G. Lowe, "Distinctive image features from scale-invariant keypoints,
"International Journal of Computer Vision, 60, 2 (2004), pp. 91-110.

  </description>

  <!-- multiple maintainer tags allowed, one name per tag-->
  <maintainer email="k-okada@jsk.t.u-tokyo.ac.jp">Kei Okada</maintainer>
  <!-- Commonly used license strings:
  BSD, MIT, Boost Software License, GPLv2, GPLv3, LGPLv2.1, LGPLv3-->
  <license>LGPLv3</license>
  <!-- url type could be one of website (default), bugtracker and repository -->
  <url type="website">http://sourceforge.net/projects/libsift/</url>
  <!-- multiple authors tags allowed, one name per tag-->
  <author email="zerofrog@gmail.com">zerofrog</author>
  <!--Any system dependency or dependency to catkin packages. Examples:-->
  <!--<build_depend>genmsg</build_depend> for libraries for compiling-->
  <buildtool_depend>cmake</buildtool_depend>
  <!--<run_depend>python-yaml</run_depend> for packages used at runtime-->
  <!--<test_depend>gtest</test_depend> for packages needed for testing-->
  <export>
    <!-- This section contains any information that other tools require-->
    <!-- <architecture_independent/> -->
    <!-- <meta_package/> -->
  </export>
</package>